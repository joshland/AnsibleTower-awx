---
- name: Install nginx
  yum: name=nginx state=present

- name: ensure nginx dir config
  file:
    path:  "{{ nginx['configpath'] }}"
    state: directory
    mode:  '0755'
    owner: "{{ nginx['user'] }}"
    group: "{{ nginx['group'] }}"

- name: ensure nginx dir config
  file:
    path: "{{ nginx['configpath'] }}/conf.d"
    state: directory
    mode: "0755"
    owner: "{{ nginx['user'] }}"
    group: "{{ nginx['group'] }}"

- name: nginx ssl config deployment
  template:
    src: ssl.conf
    dest: "{{ nginx['configpath'] }}/ssl.conf"
    owner: "{{ nginx['user'] }}"
    group: "{{ nginx['group'] }}"
  notify: restart nginx

- name: nginx base config deployment
  template:
    src: nginx.conf
    dest: "{{ nginx['configpath'] }}/nginx.conf"
    owner: "{{ nginx['user'] }}"
    group: "{{ nginx['group'] }}"
  notify: restart nginx

- name: nginx default http redir to https
  template:
    src: default_ssl.conf
    dest: "{{ nginx['configpath'] }}/conf.d/default_ssl.conf"
    owner: "{{ nginx['user'] }}"
    group: "{{ nginx['group'] }}"
  notify: restart nginx

- name: nginx site config
  template:
    src: default.conf
    dest: "{{ nginx['configpath'] }}/conf.d/default.conf"
    owner: "{{ nginx['user'] }}"
    group: "{{ nginx['group'] }}"
  notify: restart nginx

# - name: nginx default http->https redirect
#   template:
#     src: http_conf.conf
#     dest: "{{ nginx['configpath'] }}/conf.d/default_https.conf"
#     owner: "{{ nginx['user'] }}"
#     group: "{{ nginx['group'] }}"
#   notify: restart nginx

## removed for this portion, TODO: strike?
# - name: nginx mattermost config
#   template:
#     src: nginx.conf
#     dest: "{{ nginx['configpath'] }}/nginx.conf"
#     owner: "{{ nginx['user'] }}"
#     group: "{{ nginx['group'] }}"
#   notify: restart nginx

- name: gather certificates
  shell: python -c "import os; print(os.path.realpath('/etc/letsencrypt/live/{{ nginx.hostname }}/{{ nginx.cert_name }}'))"
  register: key_path

- name: gather certificates
  shell: python -c "import os; print(os.path.realpath('/etc/letsencrypt/live/{{ nginx.hostname }}/{{ nginx.key_name }}'))"
  register: cert_path

- name: cert_path Status
  debug:
    var: cert_path

- name: key_path Status
  debug:
    var: key_path

#### Fix Live 
- name: ssl cert acl - live
  acl:
    path: /etc/letsencrypt/live
    entry: "user:{{ nginx.user }}:r-x"
    state: present

- name: ssl cert acl - fqdn
  acl:
    path: /etc/letsencrypt/live/{{ nginx.hostname }}
    entry: "user:{{ nginx.user }}:r-x"
    state: present

- name: ssl cert acl - live cert
  acl:
    path: "/etc/letsencrypt/live/{{ nginx.hostname }}/{{ nginx.cert_name }}"
    entry: "user:{{ nginx.user }}:r--"
    state: present

- name: ssl cert acl - live key
  acl:
    path: "/etc/letsencrypt/live/{{ nginx.hostname }}/{{ nginx.key_name }}"
    entry: "user:{{ nginx.user }}:r--"
    state: present

#### Actual Archive
- name: ssl cert acl - live
  acl:
    path: /etc/letsencrypt/archive
    entry: "user:{{ nginx.user }}:r-x"
    state: present

- name: ssl cert acl - fqdn
  acl:
    path: /etc/letsencrypt/archive/{{ nginx.hostname }}
    entry: "user:{{ nginx.user }}:r-x"
    state: present

- name: ssl cert acl - archive cert
  acl:
    path: "{{ cert_path.stdout }}"
    entry: "user:{{ nginx.user }}:r--"
    state: present

- name: ssl cert acl - archive key
  acl:
    path: "{{ key_path.stdout }}"
    entry: "user:{{ nginx.user }}:r--"
    state: present

- name: open firewall to https
  firewalld:
    service: https
    permanent: yes
    state: enabled

- name: open firewall to http
  firewalld:
    service: http
    permanent: yes
    state: enabled
